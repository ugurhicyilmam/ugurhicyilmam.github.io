<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bir yazılımcının notları...</title>
    <link>https://ugurhicyilmam.github.io/index.xml</link>
    <description>Recent content on Bir yazılımcının notları...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>TR</language>
    <lastBuildDate>Tue, 07 Feb 2017 17:23:17 +0300</lastBuildDate>
    <atom:link href="https://ugurhicyilmam.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tembel Olmak</title>
      <link>https://ugurhicyilmam.github.io/blog/tembel-olmak/</link>
      <pubDate>Tue, 07 Feb 2017 17:23:17 +0300</pubDate>
      
      <guid>https://ugurhicyilmam.github.io/blog/tembel-olmak/</guid>
      <description>&lt;p&gt;Tembellik, toplum genelinde olumsuz bir özellik olarak değerlendirilir. Genel inanış, çok çalışmanın başarı için kaçınılmaz olduğu yönündedir.  Aile içinde bile, &amp;ldquo;Ruşen amcanın oğlu Sedat&amp;rdquo; gibi çalışkan insanlar övülürken, ebeveynlerimiz tembelliğimizden dolayı bizlere çemkirir.&lt;/p&gt;

&lt;p&gt;Sıkça yapılan bir hata, tembellik ile sorumsuzluğu karıştırmak&amp;hellip; Aslında, tembel olmak hiçbir şey yapmamak anlamına gelmiyor, sadece bir işi halletmenin daha kolay bir yolunu bulup, çok fazla çaba harcamaktan kaçınmak anlamına geliyor.&lt;/p&gt;

&lt;p&gt;İş programlamaya geldiğinde, tembellik özellikle avantajlı oluyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kod yazmaktan kaçınmak&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tembel bir insan olarak, gereksiz kod yazmaktan özellikle kaçınmaya çalışıyorum.&lt;/p&gt;

&lt;p&gt;Öncelikle, kod yazmak çok kolay bir iş değil. Birkaç metot içeren basit bir uygulama yazmak bile, azımsanmayacak miktarda bir odaklanma gerektiriyor. Özellikle proje büyüdükçe, eklenen her satır kodun uygulamayı bozma ihtimali var. Kod yazmak, mümkün mertebe kaçınılması gereken, nahoş bir aktivite.&lt;/p&gt;

&lt;p&gt;Kod yazmaktan kaçınmak için, öncelikle sorunu iyi değerlendirmek gerekiyor. Müşteriden bir istek geldiğinde ya da siz bir eksiklik fark edip, ekleme yapmanız gerektiğini düşündüğünüzde önce bir soluklanmanız ve sorunu çözmek için kod yazmak zorunda mısınız diye düşünmeniz gerekiyor. Pek çok defa, müşteri tarafından çok ciddi sorun olduğu düşünülen konuları, biraz düşünme ve ikna yöntemiyle hiç kod yazmadan çözdüğüm olmuştur.&lt;/p&gt;

&lt;p&gt;Bir diğer yöntem ise, kodu güzel modüllere ayırmak ve gelecekte oluşturduğunuz modülleri, etkili bir şekilde kullanmak. Bu nedenle kodunuzu güzel bir şekilde modüllere ayırmalı, yazılmış kodları mümkün olduğunca yeniden kullanmaya odaklanmalısınız.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Doküman: sıkıcı ama gerekli&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kod yazıldıktan sonra birkaç ay içinde, o kodun ne yaptığını hatırlayan kimse kalmıyor. Bu süre uzadıkça, o kodu yazan kişinin kimliği bile anonimleşiyor. Bir gün bu tuhaf, anonimleşmiş, artık kimsenin hatırlamadığı kod parçaları hakkında, bir değişiklik isteği, hata ya da bir soru geliyor. Bu problemin muhatabı olan zat-ı şahanelerinin ise, dokümansız yabana gönderdiği bu kod parçasından dolayı başı belaya giriyor.&lt;/p&gt;

&lt;p&gt;Böyle bir durumla karşılaştığınızda harcayacağınız çabayı bir düşünün. Kod okumak, kod yazmaktan bile zor bir iş ve tembel bir yazılımcı bunu minimize etmek zorunda.&lt;/p&gt;

&lt;p&gt;Bunu ne yazık ki birkaç acı tecrübeyle öğrendim ve uzun zamandır yazdığım her &amp;ldquo;public&amp;rdquo; fonksiyon için, kesinlikle doküman yazmaktayım. Hatta çoğu zaman fonksiyonu yazmadan önce dokümanını hazırlıyorum ki daha sonra şeytana uyup, doküman yazmamazlık etmeyeyim.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ona minik testler yazın&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yeni bir proje veya özellik üzerinde çalışıyorsunuz. Ve bam! Sizin geliştirdiğiniz bir özellik düzgün çalışmıyor. Elbette geliştirdikten sonra her şey düzgün çalışıyor mu diye test etmiştiniz ve sorun olmadığını görüp, kodunuzu göndermiştiniz. Ancak, projenin &amp;ldquo;dıdısının dıdısında&amp;rdquo;, sizin geliştirdiğiniz kısımla tamamen alakasız olan bilinmeyen bir köşede yapılmış ufak bir değişiklik, sizin kodunuzu patlattı.&lt;/p&gt;

&lt;p&gt;Bu tarz sorunları engellemek için dâhiyane bir çözüm var: Test otomasyonu. Eğer yazdığınız özellikleri %100 kapsayan testleriniz varsa yapılan değişiklikler nedeniyle bozulan özellikler anında tespit edilebilecek, çözülebilecek ve sizin başınızı ağrıtmayacak.&lt;/p&gt;

&lt;p&gt;Kod içerisinde hata bulmak ve düzeltmek, özellikle zaman geçtikçe daha da zorlaşır. Hatanın yapıldığı andan çözümüne kadar geçen zaman, hatanın doğru bir şekilde çözülememesi ihtimalini arttırır. Bu nedenle kod ilk yazıldığı anda mümkün olduğunca farklı açıdan test edilmeli ve hata yapma olasılığı en aza indirilmelidir. Bu sizi gelecekte çok daha fazla çabadan kurtaracaktır.&lt;/p&gt;

&lt;p&gt;Bu tavsiyeler, fi tarihinde okuduğum bir &lt;em&gt;Quora&lt;/em&gt; cevabından esinlenildi ancak fi tarihinde olduğundan dolayı kaynak gösteremeyeceğim. Arada bir &amp;ldquo;sorumsuzluk&amp;rdquo; edip uygulamasam da, genellikle uyguluyorum ve beni ciddi baş ağrılarından kurtardığını söyleyebilirim.&lt;/p&gt;

&lt;p&gt;Bu yazıyı daha önce de bloğumda yayınlamıştım. Bir gözden geçirip, yeni bloğumda tekrar yayınlıyorum.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Anki Metodu</title>
      <link>https://ugurhicyilmam.github.io/blog/anki-metodu/</link>
      <pubDate>Tue, 31 Jan 2017 17:52:07 +0300</pubDate>
      
      <guid>https://ugurhicyilmam.github.io/blog/anki-metodu/</guid>
      <description>

&lt;p&gt;Programlama geniş bir alan ve hiç şüphe yok ki uzmanlaşmak uzun zaman alıyor. Eğer benim gibi bu alana geç başlamış ve üstüne üstlük sabırsızsanız, bu yazı tam sizlik.&lt;/p&gt;

&lt;p&gt;Programlamaya ilk başladığım yılda pek çok kitap okudum, video izledim, kütüphane öğrendim. Yılın sonunda üzülerek farkettim ki, öğrendiklerimin %90&amp;rsquo;ı buharlaşmış. Aklımda yalnızca sık kullandığım %10&amp;rsquo;luk kısım kalmış.&lt;/p&gt;

&lt;p&gt;Unutmanın önüne geçebilmek için ilk olarak defter tutmaya başladım. Planım belirli aralıklarla tuttuğum notların üzerinden geçerek unutmayı en aza indirmekti. Not tutarak harcadığım onlarca verimsiz saatten sonra acı gerçeği farkettim: bu notları asla tekrar etmeyecektim.&lt;/p&gt;

&lt;p&gt;Not tutmak ile en önemli sorun, unutmamak için tüm notları tekrar etmek zorunda olmanız.&lt;/p&gt;

&lt;p&gt;Not tutup tekrar etmek yerine, sadece unuttuğum notları tekrar etmemi sağlayacak bir sistem olup olmadığını merak ettim ve araştırmaya koyuldum. Küçük ama işini mükemmel yapan sihirli uygulamayı bulmam uzun zaman almadı: &lt;strong&gt;Anki&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;anki-nedir&#34;&gt;Anki Nedir?&lt;/h2&gt;

&lt;p&gt;Anki&amp;rsquo;nin çalışma prensibi çok basit: bilgi kartları oluşturuyorsunuz ve Anki de bunları size belirli aralıklarla soruyor. Kolay bilinen kartları daha uzun aralıklarla, zorları ise daha sık aralıklarla soruyor.&lt;/p&gt;

&lt;p&gt;Anki&amp;rsquo;nin, masaüstü uygulaması, web sitesi ve hem iOS hem de Android için mobil uygulamaları mevcut. Üstelik beleş!&lt;/p&gt;

&lt;p&gt;Beleş derken, ne yazık ki iOS kullanıcıları olarak burada da kazıklanıyoruz. Diğer tüm platformlar ücretsizken, iOS üzerinde kullanmak 65₺ (fiyat güncel değildir).&lt;/p&gt;

&lt;h2 id=&#34;çalışma-yöntemim&#34;&gt;Çalışma Yöntemim&lt;/h2&gt;

&lt;p&gt;Anki ile çalışmaya başladıktan sonra, kendime ihtiyaçlarıma uygun bir çalışma rutini geliştirmem biraz zaman aldı. Rutinimi geliştirirken, konuyla ilgili bazı kaynaklardan da faydalandım. Örneğin &lt;a href=&#34;https://www.jackkinsella.ie/articles/janki-method&#34;&gt;Janki Method&lt;/a&gt; bunlardan birisi.&lt;/p&gt;

&lt;p&gt;Uzun süren deneme yanılmalardan sonra, kendime göre bazı Anki ilkeleri geliştirdim. Bu ilkeleri düzgün bir şekilde uyguladığımda, yöntemin başarılı bir şekilde çalıştığını gördüm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;İlke 1: Her sabah Anki yap.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bir gün bile ara verdiğimde, Anki yapmaya dair motivasyonumun dramatik bir şekilde düştüğünü farkettiğimden bu yana, devamlılığın en önemli şeylerden biri olduğuna ikna oldum. Bu nedenle, günlük rutinimde ilk yaptığım iş, kartlarımı tekrar etmek oluyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;İlke 2: Kartların amacı belli bir kavramı hatırlatmak olsun, kendini zorlamak değil.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Anki destelerinin amacı unutmayı en aza indirgemek, sizi sınamak değil. Bu nedenle, eklenen kartların mümkün olduğunca basit olması gerekiyor.&lt;/p&gt;

&lt;p&gt;Linux&amp;rsquo;ta ufak bir komutu hatırlamak için eklediğim örnek bir kart şu şekilde:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ugurhicyilmam.github.io/post_images/example-simple-card.PNG&#34; alt=&#34;Example linux card&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Dediğim gibi, bir kartın amacı sizi sınamak değil, yalnızca bir kavramı hatırlamanıza yardımcı olmak. Bir kartı cevaplandırmak eğer 3-4 saniyeden fazla sürüyorsa, bilin ki kartlarınız fazla zor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;İlke 3: Her şeyi hatırlamaya çalışma, yalnızca önemli şeyleri hatırlamaya çalış.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Programlama pratik bir alan. Pratikte kullanmayacağınız bir bilginin destenizde yer alması manasız. Ben genelde bir kitaptan öğrenirken, aynı zamanda önemli gördüğüm şeyler için Anki kartı oluşturuyorum. Daha sonra deste yeterince büyüdüğünde tekrar etmeye başlıyorum. Belli bir zaman sonra tekrar ettiğim bir karttaki bilgiye, hiçbir zaman ihtiyaç duymadığımı farkedersem, acımadan kartı imha ediyorum.&lt;/p&gt;

&lt;h2 id=&#34;anki-nin-kullanımı&#34;&gt;Anki&amp;rsquo;nin Kullanımı&lt;/h2&gt;

&lt;p&gt;Bu bölüme kadar geldiğinize göre Anki&amp;rsquo;ye bir şans verme kararı aldınız. Güzel, kendiniz için doğru bir adım attınız. İyi programcılara ihtiyacımız var.&lt;/p&gt;

&lt;h5 id=&#34;birinci-adım&#34;&gt;Birinci adım&lt;/h5&gt;

&lt;p&gt;İlk yapmanız gereken şey &lt;a href=&#34;https://ankiweb.net&#34;&gt;Ankiweb&lt;/a&gt; sitesine girip bir hesap oluşturmak. Bu hesap, kartlarınızın bulutta depolanmasına yarayacak.&lt;/p&gt;

&lt;h5 id=&#34;ikinci-adım&#34;&gt;İkinci adım&lt;/h5&gt;

&lt;p&gt;Hesabınızı oluşturduktan sonra, &lt;a href=&#34;https://apps.ankiweb.net/&#34;&gt;şu adrese&lt;/a&gt; giderek Anki&amp;rsquo;nin masaüstü uygulamasını indirin. Uygulamayı kurup, hesabınıza giriş yapın.&lt;/p&gt;

&lt;h5 id=&#34;üçüncü-adım&#34;&gt;Üçüncü adım&lt;/h5&gt;

&lt;p&gt;Mobil uygulamayı yükleyin. Android için &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.ichi2.anki&amp;amp;hl=tr&#34;&gt;AnkiDroid&lt;/a&gt;, iOS için &lt;a href=&#34;https://itunes.apple.com/us/app/ankimobile-flashcards/id373493387?mt=8&#34;&gt;AnkiMobile Flashcards&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;iOS uygulaması ne yazık ki ücretli ve açıkçası biraz tuzlu. Ancak sorun yok, kart tekrarı için masaüstü uygulamasını ve web sitesini kullanabilirsiniz.&lt;/p&gt;

&lt;h5 id=&#34;dördüncü-adım&#34;&gt;Dördüncü adım&lt;/h5&gt;

&lt;p&gt;Bir deste oluşturun ve kart oluşturmaya başlayın.&lt;/p&gt;

&lt;p&gt;Kart oluşturma ekranı şu şekilde:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ugurhicyilmam.github.io/post_images/anki-add-card.PNG&#34; alt=&#34;Add card to anki&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Ön tarafa soru, arka tarafa cevabı geliyor. Sorunun kavramına göre etiket eklemek de daha sonra belli bir kategorideki kartları, ayrı bir desteye taşırken yardımcı oluyor.&lt;/p&gt;

&lt;p&gt;Ayrıca keşfetmemin zaman aldığı, Anki destelerine görsel eklemek ile ilgili ufak bir bilgi vereyim. Windows&amp;rsquo;un snipping tool&amp;rsquo;u ile ekranın belli bir kısmını seçtiğinizde, seçilen resim otomatik olarak clipboard içine alınıyor. Anki&amp;rsquo;de &amp;ldquo;Ön&amp;rdquo; veya &amp;ldquo;Arka&amp;rdquo; alanlarından birine bu resmi eklemek için, direkt olarak Ctrl+V yapabilirsiniz.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hakkımda</title>
      <link>https://ugurhicyilmam.github.io/fixed/about/</link>
      <pubDate>Tue, 17 Jan 2017 10:37:50 +0300</pubDate>
      
      <guid>https://ugurhicyilmam.github.io/fixed/about/</guid>
      <description>&lt;p&gt;Merhaba, ben Uğur Hiçyılmam.&lt;/p&gt;

&lt;p&gt;Accenture Endüstriyel Yazılım Çözümleri firmasında yazılım mühendisi olarak çalışmaktayım. Ayrıca Boğaziçi Üniversitesi Yazılım Mühendisliği bölümünde yüksek lisans yapmaktayım.&lt;/p&gt;

&lt;p&gt;İlk bilgisayarımı edindiğim 12 yaşımdan bu yana, programlama hobi anlamında her zaman hayatımda yer almış olsa da bu işi profesyonel anlamda yapmaya başlamam yalnızca 3 yıllık bir deneyim.&lt;/p&gt;

&lt;p&gt;Lisans eğitimimi Yıldız Teknik Üniversitesi İktisat bölümünde aldım. Birkaç ufak iş deneyiminden sonra bu alanın bana göre olmadığını fark edip, hobimi meslek edinme kararı aldım. Yani, 23 yaşında, işsiz, kararsız ve bolca boş vakti olan bir insan olarak, 6 yaşında okula ilk adım attığım andan itibaren başlayarak 23 yaşıma kadar sürmüş &amp;ldquo;17&amp;rdquo; yıllık bir aradan sonra, kendi öğrenimimi kendi elime almaya karar verdim. O andan itibaren kendimi programlama alanında geliştirmeye başladım.&lt;/p&gt;

&lt;p&gt;Programlama alanında profesyonel anlamda ilerleme kararı almamın üzerinden 3 yıl geçti ve son 1 yıldır da aktif olarak sektörün içinde çalışıyorum.&lt;/p&gt;

&lt;p&gt;Kendimi geliştirme sürecinde pek çok tecrübe edindim, pek çok hata yaptım. 3 yıl uzun bir zaman olmasa da bu süreçte bazı anlatacak şeyler edindim. Bu tecrübelerin özellikle başka yeni başlayan insanlara ışık tutacağına inanıyorum.&lt;/p&gt;

&lt;p&gt;Bu blogta, iş hayatında edindiğim tecrübeleri, yaptığım hataları ve kendini geliştirmek isteyen arkadaşlar için tavsiyelerimi, yazılım mühendisliği ve programlama alanındaki bazı düşüncelerimi paylaşacağım. Çok genel olmadığı sürece, teknik konulardan özellikle uzak durmaya çalışacağım.&lt;/p&gt;

&lt;p&gt;Sorularınız, önerileriniz veya fikirleriniz için, sosyal medya kanalları üzerinden bana erişebilirsiniz.&lt;/p&gt;

&lt;p&gt;Uğur Hiçyılmam&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ugurhicyilmam.github.io/about-this-site/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ugurhicyilmam.github.io/about-this-site/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://ugurhicyilmam.github.io/colophon&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;0;url=/colophon&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ugurhicyilmam.github.io/posts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ugurhicyilmam.github.io/posts/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://ugurhicyilmam.github.io/blog&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;0;url=/blog&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ugurhicyilmam.github.io/writing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ugurhicyilmam.github.io/writing/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://ugurhicyilmam.github.io/posts&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;0;url=/posts&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
  </channel>
</rss>